/**
 * @packageDocumentation
 * @module api.functional
 */
//================================================================
import { AesPkcs5, Fetcher, Primitive } from "nestia-fetcher";
import type { IConnection } from "nestia-fetcher";

import type { IUser } from "./../structure/IUser";

/**
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 * @controller AppController.getHello()
 * @path GET /
 */
export function getHello
    (
        connection: IConnection
    ): Promise<getHello.Output>
{
    return Fetcher.fetch
    (
        connection,
        getHello.ENCRYPTED,
        getHello.METHOD,
        getHello.path()
    );
}
export namespace getHello
{
    export type Output = Primitive<string>;

    export const METHOD = "GET" as const;
    export const PATH: string = "/";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export function path(): string
    {
        return `/`;
    }
}

/**
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 * @controller AppController.getUsers()
 * @path GET /
 */
export function getUsers
    (
        connection: IConnection
    ): Promise<getUsers.Output>
{
    return Fetcher.fetch
    (
        connection,
        getUsers.ENCRYPTED,
        getUsers.METHOD,
        getUsers.path()
    );
}
export namespace getUsers
{
    export type Output = Primitive<Array<IUser>>;

    export const METHOD = "GET" as const;
    export const PATH: string = "/";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export function path(): string
    {
        return `/`;
    }
}

/**
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 * @controller AppController.createUser()
 * @path POST /
 */
export function createUser
    (
        connection: IConnection,
        input: Primitive<createUser.Input>
    ): Promise<createUser.Output>
{
    return Fetcher.fetch
    (
        connection,
        createUser.ENCRYPTED,
        createUser.METHOD,
        createUser.path(),
        input
    );
}
export namespace createUser
{
    export type Input = Primitive<IUser>;
    export type Output = Primitive<IUser>;

    export const METHOD = "POST" as const;
    export const PATH: string = "/";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export function path(): string
    {
        return `/`;
    }
}



//---------------------------------------------------------
// TO PREVENT THE UNUSED VARIABLE ERROR
//---------------------------------------------------------
AesPkcs5;
Fetcher;
Primitive;